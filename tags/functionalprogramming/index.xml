<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>functionalprogramming on Aashish Koirala</title><link>https://aashishkoirala.github.io/tags/functionalprogramming/</link><description>Recent content in functionalprogramming on Aashish Koirala</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.github.io/tags/functionalprogramming/index.xml" rel="self" type="application/rss+xml"/><item><title>An Azure Service Fabric Restarter in F#</title><link>https://aashishkoirala.github.io/blog/tech/an-azure-service-fabric-restarter-in-fsharp/</link><pubDate>Wed, 15 Mar 2017 00:00:00 +0000</pubDate><guid>https://aashishkoirala.github.io/blog/tech/an-azure-service-fabric-restarter-in-fsharp/</guid><description>Trying to get beyond just writing quick scripts here and there in F#, I went through functional design patterns targeted at building mainstream applications. Railway-oriented programming specifically stuck with me. I decided to try it along with some of the other core functional concepts such as projecting to other domains with map and bind operations. My first foray into this was applying it to, surprise, surprise, yet another quick script I had in place.</description></item><item><title>Fiddling with F#</title><link>https://aashishkoirala.github.io/blog/tech/fiddling-with-fsharp/</link><pubDate>Sun, 05 Jun 2016 00:00:00 +0000</pubDate><guid>https://aashishkoirala.github.io/blog/tech/fiddling-with-fsharp/</guid><description>I have always had a keen interest in functional programming. While I still shy away from going completely functional for full-blown applications, I try to use the tenets of functional programming as much as I can even when writing C#. This is made much easier by the fact that C# has borrowed a lot of functional programming features as it has evolved. With each new version of the language, I find my code getting more concise and more expressive mostly owing to these features.</description></item></channel></rss>