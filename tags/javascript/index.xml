<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on Aashish Koirala</title><link>https://aashishkoirala.com/tags/javascript/</link><description>Recent content in javascript on Aashish Koirala</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Dec 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.com/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>The New Way Forward for SPAs with Angular and React</title><link>https://aashishkoirala.com/blog/tech/the-new-way-forward-for-spas-with-angular-and-react/</link><pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/the-new-way-forward-for-spas-with-angular-and-react/</guid><description>Having worked with Angular 1.x for some time and having liked it quite a lot (I guess that one we&amp;rsquo;re supposed to call AngularJS, and the new one is just Angular - yes, that is not confusing at all, is it?), I must say I was quite spooked when I first saw the documentation for the new Angular. It indeed is a completely different framework. There is no easy migration path from AngularJS short of a rewrite, at which point you might as well evaluate all your options including React.</description></item><item><title>Bye, Bye, TypeScript, for now</title><link>https://aashishkoirala.com/blog/tech/bye-bye-typescript-for-now/</link><pubDate>Tue, 15 Apr 2014 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/bye-bye-typescript-for-now/</guid><description>As much as I raved about TypeScript in this post from some time ago, sadly the time has come for me to part with it - at least for now. It is a beautiful piece of work by a beyond-brilliant group of people. As I worked more and more with JavaScript the past year, though, I realized a few things.
The first, and this I already mentioned in my previous post, is that it is still maturing and is not quite there yet.</description></item><item><title>Bootstrap Modal With AngularJS</title><link>https://aashishkoirala.com/blog/tech/bootstrap-modal-with-angularjs/</link><pubDate>Mon, 17 Mar 2014 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/bootstrap-modal-with-angularjs/</guid><description>We&amp;rsquo;ll look at a relatively low hanging fruit in case you&amp;rsquo;re working with vanilla AngularJS and Twitter Bootstrap and are not relying on other add-ons such as AngularUI&amp;rsquo;s Bootstrap extension. One common need I have is to be able to show or hide Bootstrap modals based on a property on my view-model. Here&amp;rsquo;s a simplified view of the controller:
var app = angular.module('app', ...); ... app.controller('ctrl', function ($scope, ...) { .</description></item><item><title>Conditional JQuery Datepicker With AngularJS</title><link>https://aashishkoirala.com/blog/tech/conditional-jquery-datepicker-with-angularjs/</link><pubDate>Fri, 07 Mar 2014 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/conditional-jquery-datepicker-with-angularjs/</guid><description>I just find AngularJS directives so much fun. It is so satisfying to see them work. Recently, I came across a requirement where I had a text field bound to a property that could either be a date or text. I had a way of knowing which one it was, but if the property was a date, the text field would need to become a datepicker, and turn back into a normal text field if not.</description></item><item><title>Dancing with Responsive Design</title><link>https://aashishkoirala.com/blog/tech/dancing-with-responsive-design/</link><pubDate>Thu, 05 Dec 2013 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/dancing-with-responsive-design/</guid><description>I have been hearing about responsive design on and off for some time now, and it has always appealed to me as a pattern to follow for web-based user interfaces. CSS3 is obviously quite powerful and media queries provide a relatively easy way to build one unified UI that looks great on PCs, but then adapts and shape-shifts accordingly when viewed on a smartphone or tablet without having to completely re-implement a &amp;ldquo;mobile site&amp;rdquo; as so many do today.</description></item><item><title>TypeScript, AngularJS and Bootstrap- The Killer Combo</title><link>https://aashishkoirala.com/blog/tech/typescript-angularjs-and-bootstrap-the-killer-combo/</link><pubDate>Fri, 30 Aug 2013 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/typescript-angularjs-and-bootstrap-the-killer-combo/</guid><description>After having recently used this combination, I am in love with it. For those unfamiliar with any of these, here are quick one liners:
TypeScript is a JavaScript superset from Microsoft that compiles down to JavaScript and adds static typing and other neat features like classes and what not. It is worth mentioning that none other than Anders Hejlsberg (the father of C#) was involved in its development.
AngularJS is a JavaScript framework geared towards building rich and testable single-page applications.</description></item><item><title>Introduction to NodeJS</title><link>https://aashishkoirala.com/blog/tech/introduction-to-nodejs/</link><pubDate>Thu, 12 Apr 2012 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/introduction-to-nodejs/</guid><description>I just ran into some presentation material from a Node.js introduction presentation I had done in a session that shall remain unnamed. I thought it would be a good idea to put it out there in case someone is starting out with Node, should they stumble on here. So, here it is.
To quote Wikipedia:
A software system designed for writing scalable internet applications, notably web servers. Programs are written in JavaScript, using event-driven, asynchronous I/O to minimize overhead and maximize scalability.</description></item></channel></rss>