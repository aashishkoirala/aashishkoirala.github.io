<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>async on Aashish Koirala</title><link>https://aashishkoirala.com/tags/async/</link><description>Recent content in async on Aashish Koirala</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 20 Dec 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.com/tags/async/index.xml" rel="self" type="application/rss+xml"/><item><title>Reader-Writer Locking with Async-Await</title><link>https://aashishkoirala.com/blog/tech/reader-writer-locking-with-async-await/</link><pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/reader-writer-locking-with-async-await/</guid><description>Consider this another pitfall warning. If you are a frequent user of reader/writer locking (via the ReaderWriterLockSlim class) like I am, you will undoubtedly run into this situation. As more and more code we write these days are asynchronous with the use of async/await, it is easy to end up in the following situation (an oversimplification, but just imagine write locks in there as well):
async Task MyMethod() { ... myReaderWriterLockSlim.</description></item></channel></rss>