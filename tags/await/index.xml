<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Await on Aashish Koirala</title><link>https://aashishkoirala.com/tags/await/</link><description>Recent content in Await on Aashish Koirala</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 20 Dec 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.com/tags/await/index.xml" rel="self" type="application/rss+xml"/><item><title>Reader-Writer Locking with Async-Await</title><link>https://aashishkoirala.com/blog/tech/reader-writer-locking-with-async-await/</link><pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/reader-writer-locking-with-async-await/</guid><description>&lt;p>Consider this another pitfall warning. If you are a frequent user of &lt;a href="https://aashishkoirala.com/blog/tech/reader-writer-locking-in-dotnet/">reader/writer locking&lt;/a> (via the &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.threading.readerwriterlockslim?view=netframework-4.7.2">&lt;code>ReaderWriterLockSlim&lt;/code>&lt;/a> class) like I am, you will undoubtedly run into this situation. As more and more code we write these days are asynchronous with the use of &lt;code>async/await&lt;/code>, it is easy to end up in the following situation (an oversimplification, but just imagine write locks in there as well):&lt;/p>
&lt;pre>&lt;code>async Task MyMethod()
{
	...
	myReaderWriterLockSlim.EnterReadLock();
	var thing = await ReadThingAsync();
	... 
	myReaderWriterLockSlim.ExitReadLock(); // This guy will choke.
}
&lt;/code>&lt;/pre>
&lt;p>This, of course, will not work. This is because reader/writer locks, at least the implementation in .NET, are &lt;em>thread-affine&lt;/em>. This means the very same thread that acquired a lock must be the one to release it. As soon as you hit an &lt;code>await&lt;/code>, you have dispatched the rest of the behavior to some other thread. So this cannot work.&lt;/p></description></item></channel></rss>