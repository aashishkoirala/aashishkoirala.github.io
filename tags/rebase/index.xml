<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rebase on Aashish Koirala</title><link>https://aashishkoirala.com/tags/rebase/</link><description>Recent content in Rebase on Aashish Koirala</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 07 Jan 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.com/tags/rebase/index.xml" rel="self" type="application/rss+xml"/><item><title>Git- Rewriter of History</title><link>https://aashishkoirala.com/blog/tech/git-rewriter-of-history/</link><pubDate>Wed, 07 Jan 2015 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/git-rewriter-of-history/</guid><description>&lt;p>Undoubtedly one of the biggest advantages that &lt;a href="https://git-scm.com/">Git&lt;/a> provides is using &lt;a href="https://git-scm.com/docs/git-rebase">rebasing&lt;/a> to maintain a clean commit history. I find that I am using it a lot these days- primarily in three modes:&lt;/p>
&lt;ul>
&lt;li>As part of &lt;em>pull&lt;/em> (i.e. &lt;strong>git pull -rebase&lt;/strong>)&lt;/li>
&lt;li>Interactive rebase to: 1) keep my own history clean when I am off working on a branch by myself, and 2) clean up a feature branch&amp;rsquo;s commit history before merging it into the mainstream&lt;/li>
&lt;li>Rebase my branch against a more mainstream branch before I merge onto it (i.e. &lt;strong>git rebase&lt;/strong> &lt;em>mainstream-branch&lt;/em>)&lt;/li>
&lt;/ul>
&lt;p>With interactive rebase, usually what I do is- I will have one initial commit that describes in general the feature I am working on. It will then be followed by a whole bunch of commits that are advancements of or adjustments to that - quick and dirty ones with &amp;ldquo;WIP (i.e. work in progress) as the message. If, in the middle of this, I switch to some other significant area, then I will add another commit with a more verbose message, and then again it&amp;rsquo;s &amp;ldquo;WIP, &amp;ldquo;WIP, and so on. I will add any thing I need to qualify the &amp;ldquo;WIP with if necessary (e.g. if the &amp;ldquo;WIP is for a different context than the last few WIPs, or if the WIP does indeed add some more information to the initial commit). In any case, after some time, I will end up with a history that looks a bit like this (in chronological order):&lt;/p></description></item></channel></rss>