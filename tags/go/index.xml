<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on Aashish Koirala</title><link>https://aashishkoirala.com/tags/go/</link><description>Recent content in Go on Aashish Koirala</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 20 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.com/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>The Rise of Go</title><link>https://aashishkoirala.com/blog/tech/the-rise-of-go/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/the-rise-of-go/</guid><description>&lt;p>Recently, &lt;a href="https://golang.org/">Go&lt;/a> has seen a real uptick in popularity and adoption for a variety of different usages. It has been around for a while and has been continually improving. The purpose-built simplicity and extra focus on making concurrency easy and safe is part of it. The other part I like is the ease with which what you write becomes portable. These aspects especially make it a good fit to write infrastructure and tooling.&lt;/p></description></item></channel></rss>