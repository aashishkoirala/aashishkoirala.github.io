<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>angular on Aashish Koirala</title><link>https://aashishkoirala.com/tags/angular/</link><description>Recent content in angular on Aashish Koirala</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Dec 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.com/tags/angular/index.xml" rel="self" type="application/rss+xml"/><item><title>The New Way Forward for SPAs with Angular and React</title><link>https://aashishkoirala.com/blog/tech/the-new-way-forward-for-spas-with-angular-and-react/</link><pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/the-new-way-forward-for-spas-with-angular-and-react/</guid><description>Having worked with Angular 1.x for some time and having liked it quite a lot (I guess that one we&amp;rsquo;re supposed to call AngularJS, and the new one is just Angular - yes, that is not confusing at all, is it?), I must say I was quite spooked when I first saw the documentation for the new Angular. It indeed is a completely different framework. There is no easy migration path from AngularJS short of a rewrite, at which point you might as well evaluate all your options including React.</description></item><item><title>Bootstrap Modal With AngularJS</title><link>https://aashishkoirala.com/blog/tech/bootstrap-modal-with-angularjs/</link><pubDate>Mon, 17 Mar 2014 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/bootstrap-modal-with-angularjs/</guid><description>We&amp;rsquo;ll look at a relatively low hanging fruit in case you&amp;rsquo;re working with vanilla AngularJS and Twitter Bootstrap and are not relying on other add-ons such as AngularUI&amp;rsquo;s Bootstrap extension. One common need I have is to be able to show or hide Bootstrap modals based on a property on my view-model. Here&amp;rsquo;s a simplified view of the controller:
var app = angular.module('app', ...); ... app.controller('ctrl', function ($scope, ...) { .</description></item><item><title>Conditional JQuery Datepicker With AngularJS</title><link>https://aashishkoirala.com/blog/tech/conditional-jquery-datepicker-with-angularjs/</link><pubDate>Fri, 07 Mar 2014 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/conditional-jquery-datepicker-with-angularjs/</guid><description>I just find AngularJS directives so much fun. It is so satisfying to see them work. Recently, I came across a requirement where I had a text field bound to a property that could either be a date or text. I had a way of knowing which one it was, but if the property was a date, the text field would need to become a datepicker, and turn back into a normal text field if not.</description></item><item><title>TypeScript, AngularJS and Bootstrap- The Killer Combo</title><link>https://aashishkoirala.com/blog/tech/typescript-angularjs-and-bootstrap-the-killer-combo/</link><pubDate>Fri, 30 Aug 2013 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/typescript-angularjs-and-bootstrap-the-killer-combo/</guid><description>After having recently used this combination, I am in love with it. For those unfamiliar with any of these, here are quick one liners:
TypeScript is a JavaScript superset from Microsoft that compiles down to JavaScript and adds static typing and other neat features like classes and what not. It is worth mentioning that none other than Anders Hejlsberg (the father of C#) was involved in its development.
AngularJS is a JavaScript framework geared towards building rich and testable single-page applications.</description></item></channel></rss>