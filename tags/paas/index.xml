<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Paas on Aashish Koirala</title><link>https://aashishkoirala.com/tags/paas/</link><description>Recent content in Paas on Aashish Koirala</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 30 Jan 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.com/tags/paas/index.xml" rel="self" type="application/rss+xml"/><item><title>Moving to Azure PaaS and Service Fabric- Part 2</title><link>https://aashishkoirala.com/blog/tech/moving-to-azure-paas-and-service-fabric-part-2/</link><pubDate>Mon, 30 Jan 2017 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/moving-to-azure-paas-and-service-fabric-part-2/</guid><description>&lt;p>This is Part 2 of a two-part blog series:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aashishkoirala.com/blog/tech/moving-to-azure-paas-and-service-fabric-part-1/">Part 1&lt;/a> (Application- Services, Security and UI)&lt;/li>
&lt;li>Part 2 (this one; Database, Configuration, Logging, Caching, Service Bus, Emails, Tooling, Rollout)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Database&lt;/strong>&lt;/p>
&lt;p>We moved from our on-premises installation of SQL Server to the PaaS offering that is SQL on Azure. Other than the actual physical moving of the data, the additional challenge we had was that our system had a number of separate databases that were interconnected via synonyms. Since each SQL Database is an independent resource on Azure, this would not be possible without introducing external data sources which would still be performance prohibitive. We therefore had to remove the synonyms and rework some of our code to account for this. We opted to go with an Elastic Pool that was associated with all our databases. We also configured geo-replication for redundancy.&lt;/p></description></item><item><title>Moving to Azure PaaS and Service Fabric- Part 1</title><link>https://aashishkoirala.com/blog/tech/moving-to-azure-paas-and-service-fabric-part-1/</link><pubDate>Sun, 15 Jan 2017 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/moving-to-azure-paas-and-service-fabric-part-1/</guid><description>&lt;p>This is Part 1 of a two-part blog series:&lt;/p>
&lt;ul>
&lt;li>Part 1 (this one; Application- Services, Security and UI)&lt;/li>
&lt;li>&lt;a href="https://aashishkoirala.com/blog/tech/moving-to-azure-paas-and-service-fabric-part-2/">Part 2&lt;/a> (Database, Configuration, Logging, Caching, Service Bus, Emails, Tooling, Rollout)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>It has been an action-packed year at work. We moved our entire platform in one fell swoop from on-premises to &lt;a href="https://azure.microsoft.com/en-us/overview/what-is-paas/">Azure PaaS (Platform as a Service)&lt;/a>. Since this was a big re-platforming effort that would incur regression testing across the entire set of applications, we took this opportunity to include a few technology upgrades in the process. All in all, it was a daunting task and took quite a bit of research and preparation before the actual implementation could be done. I think it is worth it to highlight some of the key achievements. The move entailed the following key aspects:&lt;/p></description></item></channel></rss>