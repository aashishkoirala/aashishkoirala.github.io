<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Messagequeue on Aashish Koirala</title><link>https://aashishkoirala.com/tags/messagequeue/</link><description>Recent content in Messagequeue on Aashish Koirala</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 11 Feb 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.com/tags/messagequeue/index.xml" rel="self" type="application/rss+xml"/><item><title>RudyMQ- A Rudimentary Message Queue for Windows</title><link>https://aashishkoirala.com/blog/tech/rudymq-a-rudimentary-message-queue-for-windows/</link><pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/rudymq-a-rudimentary-message-queue-for-windows/</guid><description>&lt;p>For some odd reason out of the blue, I got this hankering to build a message queue (albeit rudimentary - hence the name) from scratch. I&amp;rsquo;ve been working with MSMQ for a while now, mostly as a transport for WCF. As cool as it is, it can really get on your nerves at times. It is an enterprise grade product, after all, which means there are a lot of dials you can turn. If something is not right, you&amp;rsquo;ll get an error. If your experience has been the same as mine, you will recognize the dreaded &lt;em>insufficient resources&lt;/em> error that MSMQ gives you for almost any of a thousand things that can go wrong.&lt;/p></description></item></channel></rss>