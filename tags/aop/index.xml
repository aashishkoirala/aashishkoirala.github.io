<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aop on Aashish Koirala</title><link>https://aashishkoirala.com/tags/aop/</link><description>Recent content in Aop on Aashish Koirala</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 26 Feb 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.com/tags/aop/index.xml" rel="self" type="application/rss+xml"/><item><title>Code Generation And Aspect Orientation</title><link>https://aashishkoirala.com/blog/tech/code-generation-and-aspect-orientation/</link><pubDate>Wed, 26 Feb 2014 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/code-generation-and-aspect-orientation/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>TL;DR&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;p>The &lt;a href="http://msdn.microsoft.com/en-us/library/y2k85ax6(v=vs.110).aspx">CodeDOM&lt;/a> is a cool library within .NET that can be used for structured code generation and compilation. When combined with &lt;a href="http://msdn.microsoft.com/en-us/library/system.reflection(v=vs.110).aspx">Reflection&lt;/a>, one neat application is to be able to inject &lt;a href="http://en.wikipedia.org/wiki/Aspect-oriented_programming">aspects&lt;/a> into your code at run-time. I have created &lt;a href="http://aashishkoirala.github.io/aspects/">Aspects for .NET&lt;/a>, a library that does just that, and also tries to bring AOP to MEF.&lt;/p>
&lt;p>Whether it be generating boilerplate, generating proxy classes or processing DSL, code generation has numerous applications. There are a few different options for code generation in .NET:&lt;/p></description></item></channel></rss>