<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Typescript on Aashish Koirala</title><link>https://aashishkoirala.com/tags/typescript/</link><description>Recent content in Typescript on Aashish Koirala</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 15 Apr 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://aashishkoirala.com/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>Bye, Bye, TypeScript, for now</title><link>https://aashishkoirala.com/blog/tech/bye-bye-typescript-for-now/</link><pubDate>Tue, 15 Apr 2014 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/bye-bye-typescript-for-now/</guid><description>&lt;p>As much as I raved about TypeScript in &lt;a href="https://aashishkoirala.com/blog/tech/typescript-angularjs-and-bootstrap-the-killer-combo/">this post&lt;/a> from some time ago, sadly the time has come for me to part with it - at least for now. It is a beautiful piece of work by a beyond-brilliant group of people. As I worked more and more with JavaScript the past year, though, I realized a few things.&lt;/p>
&lt;p>The first, and this I already mentioned in my previous post, is that it is still maturing and is not quite there yet. One of my pain points was the lack of object initializers that, in my opinion, took away some of the expressiveness of JavaScript. However, as I now look at it, it is the whole idea of trying to hide the fact that everything in JavaScript is a hash-map. Thus, you can and should be able to create an object or assign an object on the fly using JSON notation. As soon as you introduce TypeScript annotations into the mix, this goes away. The best of both worlds here would be if I could have it annotated and still be able to assign or initialize using JSON (and have the JSON be validated based on the annotation).&lt;/p></description></item><item><title>TypeScript, AngularJS and Bootstrap- The Killer Combo</title><link>https://aashishkoirala.com/blog/tech/typescript-angularjs-and-bootstrap-the-killer-combo/</link><pubDate>Fri, 30 Aug 2013 00:00:00 +0000</pubDate><guid>https://aashishkoirala.com/blog/tech/typescript-angularjs-and-bootstrap-the-killer-combo/</guid><description>&lt;p>After having recently used this combination, I am in love with it. For those unfamiliar with any of these, here are quick one liners:&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://typescript.codeplex.com/">TypeScript&lt;/a>&lt;/strong> is a JavaScript superset from &lt;strong>Microsoft&lt;/strong> that compiles down to JavaScript and adds static typing and other neat features like classes and what not. It is worth mentioning that none other than &lt;strong>&lt;a href="http://en.wikipedia.org/wiki/Anders_Hejlsberg">Anders Hejlsberg&lt;/a>&lt;/strong> (the father of C#) was involved in its development.&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://angularjs.org/">AngularJS&lt;/a>&lt;/strong> is a JavaScript framework geared towards building rich and testable single-page applications. This one comes from none other than &lt;strong>Google&lt;/strong>.&lt;/p></description></item></channel></rss>